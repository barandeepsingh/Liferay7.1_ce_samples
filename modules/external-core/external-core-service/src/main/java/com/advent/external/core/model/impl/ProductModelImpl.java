/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.advent.external.core.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.advent.external.core.model.Product;
import com.advent.external.core.model.ProductModel;
import com.advent.external.core.model.ProductSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Product service. Represents a row in the &quot;product&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ProductModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProductImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ProductImpl
 * @see Product
 * @see ProductModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class ProductModelImpl extends BaseModelImpl<Product>
	implements ProductModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a product model instance should use the {@link Product} interface instead.
	 */
	public static final String TABLE_NAME = "product";
	public static final Object[][] TABLE_COLUMNS = {
			{ "productid", Types.BIGINT },
			{ "groupid", Types.BIGINT },
			{ "companyid", Types.BIGINT },
			{ "userid", Types.BIGINT },
			{ "username", Types.VARCHAR },
			{ "productname", Types.VARCHAR },
			{ "productdescription", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("productid", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupid", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyid", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userid", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("username", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productdescription", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table product (productid LONG not null primary key,groupid LONG,companyid LONG,userid LONG,username VARCHAR(75) null,productname VARCHAR(75) null,productdescription VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table product";
	public static final String ORDER_BY_JPQL = " ORDER BY product.productid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY product.productid ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.advent.external.core.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.advent.external.core.model.Product"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.advent.external.core.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.advent.external.core.model.Product"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Product toModel(ProductSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Product model = new ProductImpl();

		model.setProductid(soapModel.getProductid());
		model.setGroupid(soapModel.getGroupid());
		model.setCompanyid(soapModel.getCompanyid());
		model.setUserid(soapModel.getUserid());
		model.setUsername(soapModel.getUsername());
		model.setProductname(soapModel.getProductname());
		model.setProductdescription(soapModel.getProductdescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Product> toModels(ProductSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Product> models = new ArrayList<Product>(soapModels.length);

		for (ProductSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.advent.external.core.service.util.ServiceProps.get(
				"lock.expiration.time.com.advent.external.core.model.Product"));

	public ProductModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _productid;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProductid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _productid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Product.class;
	}

	@Override
	public String getModelClassName() {
		return Product.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("productid", getProductid());
		attributes.put("groupid", getGroupid());
		attributes.put("companyid", getCompanyid());
		attributes.put("userid", getUserid());
		attributes.put("username", getUsername());
		attributes.put("productname", getProductname());
		attributes.put("productdescription", getProductdescription());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long productid = (Long)attributes.get("productid");

		if (productid != null) {
			setProductid(productid);
		}

		Long groupid = (Long)attributes.get("groupid");

		if (groupid != null) {
			setGroupid(groupid);
		}

		Long companyid = (Long)attributes.get("companyid");

		if (companyid != null) {
			setCompanyid(companyid);
		}

		Long userid = (Long)attributes.get("userid");

		if (userid != null) {
			setUserid(userid);
		}

		String username = (String)attributes.get("username");

		if (username != null) {
			setUsername(username);
		}

		String productname = (String)attributes.get("productname");

		if (productname != null) {
			setProductname(productname);
		}

		String productdescription = (String)attributes.get("productdescription");

		if (productdescription != null) {
			setProductdescription(productdescription);
		}
	}

	@JSON
	@Override
	public long getProductid() {
		return _productid;
	}

	@Override
	public void setProductid(long productid) {
		_productid = productid;
	}

	@JSON
	@Override
	public long getGroupid() {
		return _groupid;
	}

	@Override
	public void setGroupid(long groupid) {
		_groupid = groupid;
	}

	@JSON
	@Override
	public long getCompanyid() {
		return _companyid;
	}

	@Override
	public void setCompanyid(long companyid) {
		_companyid = companyid;
	}

	@JSON
	@Override
	public long getUserid() {
		return _userid;
	}

	@Override
	public void setUserid(long userid) {
		_userid = userid;
	}

	@JSON
	@Override
	public String getUsername() {
		if (_username == null) {
			return "";
		}
		else {
			return _username;
		}
	}

	@Override
	public void setUsername(String username) {
		_username = username;
	}

	@JSON
	@Override
	public String getProductname() {
		if (_productname == null) {
			return "";
		}
		else {
			return _productname;
		}
	}

	@Override
	public void setProductname(String productname) {
		_productname = productname;
	}

	@JSON
	@Override
	public String getProductdescription() {
		if (_productdescription == null) {
			return "";
		}
		else {
			return _productdescription;
		}
	}

	@Override
	public void setProductdescription(String productdescription) {
		_productdescription = productdescription;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Product.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Product toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Product)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProductImpl productImpl = new ProductImpl();

		productImpl.setProductid(getProductid());
		productImpl.setGroupid(getGroupid());
		productImpl.setCompanyid(getCompanyid());
		productImpl.setUserid(getUserid());
		productImpl.setUsername(getUsername());
		productImpl.setProductname(getProductname());
		productImpl.setProductdescription(getProductdescription());

		productImpl.resetOriginalValues();

		return productImpl;
	}

	@Override
	public int compareTo(Product product) {
		long primaryKey = product.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Product)) {
			return false;
		}

		Product product = (Product)obj;

		long primaryKey = product.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Product> toCacheModel() {
		ProductCacheModel productCacheModel = new ProductCacheModel();

		productCacheModel.productid = getProductid();

		productCacheModel.groupid = getGroupid();

		productCacheModel.companyid = getCompanyid();

		productCacheModel.userid = getUserid();

		productCacheModel.username = getUsername();

		String username = productCacheModel.username;

		if ((username != null) && (username.length() == 0)) {
			productCacheModel.username = null;
		}

		productCacheModel.productname = getProductname();

		String productname = productCacheModel.productname;

		if ((productname != null) && (productname.length() == 0)) {
			productCacheModel.productname = null;
		}

		productCacheModel.productdescription = getProductdescription();

		String productdescription = productCacheModel.productdescription;

		if ((productdescription != null) && (productdescription.length() == 0)) {
			productCacheModel.productdescription = null;
		}

		return productCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{productid=");
		sb.append(getProductid());
		sb.append(", groupid=");
		sb.append(getGroupid());
		sb.append(", companyid=");
		sb.append(getCompanyid());
		sb.append(", userid=");
		sb.append(getUserid());
		sb.append(", username=");
		sb.append(getUsername());
		sb.append(", productname=");
		sb.append(getProductname());
		sb.append(", productdescription=");
		sb.append(getProductdescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.advent.external.core.model.Product");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>productid</column-name><column-value><![CDATA[");
		sb.append(getProductid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupid</column-name><column-value><![CDATA[");
		sb.append(getGroupid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyid</column-name><column-value><![CDATA[");
		sb.append(getCompanyid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userid</column-name><column-value><![CDATA[");
		sb.append(getUserid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>username</column-name><column-value><![CDATA[");
		sb.append(getUsername());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productname</column-name><column-value><![CDATA[");
		sb.append(getProductname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productdescription</column-name><column-value><![CDATA[");
		sb.append(getProductdescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Product.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Product.class, ModelWrapper.class
		};
	private long _productid;
	private long _groupid;
	private long _companyid;
	private long _userid;
	private String _username;
	private String _productname;
	private String _productdescription;
	private Product _escapedModel;
}